name: Deploy

on:
  push:
    branches:
      - master
  pull_request:
    types: [ labeled, synchronize ]

env:
  WERF_REPO: "ghcr.io/${{ github.repository_owner }}/werf-guide-app-staging"
  WERF_STAGES_STORAGE: "ghcr.io/werf/staging"
  WERF_SET_ACTIVE_RELEASE: "global.active_release=1.2"
  WERFIO_GITHUB_TOKEN: "${{ secrets.API_TOKEN }}"

jobs:
  converge:
    name: Deploy
    if: github.ref == 'refs/heads/main' || contains(github.event.pull_request.labels.*.name, 'test website') || contains(github.event.pull_request.labels.*.name, 'stage website')
    runs-on: self-hosted
    steps:

    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Generate artifacts
      if: github.ref == 'refs/heads/main'
      run: |
          cd .werf/artifacts
          bash generate_artifacts.sh

    - name: Deploy to test
      uses: werf/actions/converge@v1.2
      if: contains(github.event.pull_request.labels.*.name, 'test website')
      with:
        env: test
      env:
        WERF_KUBE_CONTEXT: dev
        WERF_NAMESPACE: "werf-guide-app-staging"
        WERF_RELEASE: "werf-guide-app-staging-test"
        WERF_LOG_VERBOSE: "on"

    - name: Deploy to stage
      uses: werf/actions/converge@v1.2
      if: contains(github.event.pull_request.labels.*.name, 'stage website')
      with:
        env: stage
      env:
        WERF_KUBE_CONTEXT: dev
        WERF_NAMESPACE: "werf-guide-app-staging"
        WERF_RELEASE: "werf-guide-app-staginge"
        WERF_LOG_VERBOSE: "on"

    - name: Deploy to production
      uses: werf/actions/converge@v1.2
      if: github.ref == 'refs/heads/main'
      with:
        env: production
      env:
        WERF_KUBE_CONTEXT: prod
        WERF_NAMESPACE: "werf-guide-app-staging"
        WERF_RELEASE: "werf-guide-app-staging"
        WERF_LOG_VERBOSE: "on"